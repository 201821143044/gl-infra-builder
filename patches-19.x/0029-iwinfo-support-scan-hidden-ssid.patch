From 0ef95ba031b11ffd429793a26e4a658ed551cad6 Mon Sep 17 00:00:00 2001
From: Jianhui Zhao <jianhui.zhao@gl-inet.com>
Date: Mon, 19 Jul 2021 16:10:29 +0800
Subject: [PATCH] iwinfo: support scan hidden ssid

Signed-off-by: Jianhui Zhao <jianhui.zhao@gl-inet.com>
---
 .../patches/004-support-scan-hidden.patch     | 201 ++++++++++++++++++
 package/network/utils/iwinfo/src/iwinfo_mtk.c |   5 +-
 2 files changed, 205 insertions(+), 1 deletion(-)
 create mode 100644 package/network/utils/iwinfo/patches/004-support-scan-hidden.patch

diff --git a/package/network/utils/iwinfo/patches/004-support-scan-hidden.patch b/package/network/utils/iwinfo/patches/004-support-scan-hidden.patch
new file mode 100644
index 0000000000..dff525b7ce
--- /dev/null
+++ b/package/network/utils/iwinfo/patches/004-support-scan-hidden.patch
@@ -0,0 +1,201 @@
+--- a/include/iwinfo.h
++++ b/include/iwinfo.h
+@@ -241,7 +241,7 @@ struct iwinfo_ops {
+ 	int (*phyname)(const char *, char *);
+ 	int (*assoclist)(const char *, char *, int *);
+ 	int (*txpwrlist)(const char *, char *, int *);
+-	int (*scanlist)(const char *, char *, int *);
++	int (*scanlist)(const char *, char *, int *, const char *);
+ 	int (*freqlist)(const char *, char *, int *);
+ 	int (*countrylist)(const char *, char *, int *);
+ 	int (*survey)(const char *, char *, int *);
+--- a/iwinfo_cli.c
++++ b/iwinfo_cli.c
+@@ -585,7 +585,7 @@ static void print_scanlist(const struct
+ 	char buf[IWINFO_BUFSIZE];
+ 	struct iwinfo_scanlist_entry *e;
+ 
+-	if (iw->scanlist(ifname, buf, &len))
++	if (iw->scanlist(ifname, buf, &len, NULL))
+ 	{
+ 		printf("Scanning not possible\n\n");
+ 		return;
+--- a/iwinfo_lua.c
++++ b/iwinfo_lua.c
+@@ -382,18 +382,19 @@ static int iwinfo_L_txpwrlist(lua_State
+ }
+ 
+ /* Wrapper for scan list */
+-static int iwinfo_L_scanlist(lua_State *L, int (*func)(const char *, char *, int *))
++static int iwinfo_L_scanlist(lua_State *L, int (*func)(const char *, char *, int *, const char *ssid))
+ {
+ 	int i, x, h, len = 0;
+ 	char rv[IWINFO_BUFSIZE];
+ 	char macstr[18];
+ 	const char *ifname = luaL_checkstring(L, 1);
++	const char *ssid = lua_tostring(L, 2);
+ 	struct iwinfo_scanlist_entry *e;
+ 
+ 	lua_newtable(L);
+ 	memset(rv, 0, sizeof(rv));
+ 
+-	if (!(*func)(ifname, rv, &len))
++	if (!(*func)(ifname, rv, &len, ssid))
+ 	{
+ 		for (i = 0, x = 1; i < len; i += sizeof(struct iwinfo_scanlist_entry), x++)
+ 		{
+--- a/iwinfo_madwifi.c
++++ b/iwinfo_madwifi.c
+@@ -821,7 +821,7 @@ static int madwifi_get_txpwrlist(const c
+ 	return rc;
+ }
+ 
+-static int madwifi_get_scanlist(const char *ifname, char *buf, int *len)
++static int madwifi_get_scanlist(const char *ifname, char *buf, int *len, const char *ssid)
+ {
+ 	int ret;
+ 	char *res;
+@@ -875,7 +875,7 @@ static int madwifi_get_scanlist(const ch
+ 	/* Got athX device? */
+ 	else if( !!madwifi_isvap(ifname, NULL) )
+ 	{
+-		ret = wext_ops.scanlist(ifname, buf, len);
++		ret = wext_ops.scanlist(ifname, buf, len, ssid);
+ 	}
+ 
+ 	return ret;
+--- a/iwinfo_nl80211.c
++++ b/iwinfo_nl80211.c
+@@ -2476,11 +2476,28 @@ static int nl80211_get_scanlist_cb(struc
+ 	return NL_SKIP;
+ }
+ 
+-static int nl80211_get_scanlist_nl(const char *ifname, char *buf, int *len)
++static int nl80211_get_scanlist_nl(const char *ifname, char *buf, int *len, const char *ssid)
+ {
+ 	struct nl80211_scanlist sl = { .e = (struct iwinfo_scanlist_entry *)buf };
++	struct nl80211_msg_conveyor *cv;
+ 
+-	if (nl80211_request(ifname, NL80211_CMD_TRIGGER_SCAN, 0, NULL, NULL))
++	cv = nl80211_msg(ifname, NL80211_CMD_TRIGGER_SCAN, 0);
++	if (!cv)
++		return -ENOMEM;
++
++	if (ssid && ssid[0]) {
++		struct nl_msg *ssids = nlmsg_alloc();
++	    if (!ssids) {
++	        nl80211_free(cv);
++	        return -ENOMEM;
++	    }
++
++	    nla_put(ssids, 1, strlen(ssid), ssid);
++	    nla_put_nested(cv->msg, NL80211_ATTR_SCAN_SSIDS, ssids);
++	    nlmsg_free(ssids);
++	}
++
++	if (nl80211_send(cv, NULL, NULL))
+ 		goto out;
+ 
+ 	if (nl80211_wait("nl80211", "scan",
+@@ -2709,7 +2726,7 @@ static int nl80211_get_scanlist_wpactl(c
+ 	return (count >= 0) ? 0 : -1;
+ }
+ 
+-static int nl80211_get_scanlist(const char *ifname, char *buf, int *len)
++static int nl80211_get_scanlist(const char *ifname, char *buf, int *len, const char *ssid)
+ {
+ 	char *res;
+ 	int rv, mode;
+@@ -2722,13 +2739,13 @@ static int nl80211_get_scanlist(const ch
+ 		/* Reuse existing interface */
+ 		if ((res = nl80211_phy2ifname(ifname)) != NULL)
+ 		{
+-			return nl80211_get_scanlist(res, buf, len);
++			return nl80211_get_scanlist(res, buf, len, ssid);
+ 		}
+ 
+ 		/* Need to spawn a temporary iface for scanning */
+ 		else if ((res = nl80211_ifadd(ifname)) != NULL)
+ 		{
+-			rv = nl80211_get_scanlist(res, buf, len);
++			rv = nl80211_get_scanlist(res, buf, len, ssid);
+ 			nl80211_ifdel(res);
+ 			return rv;
+ 		}
+@@ -2749,7 +2766,7 @@ static int nl80211_get_scanlist(const ch
+ 	          mode == IWINFO_OPMODE_MONITOR) &&
+ 	         iwinfo_ifup(ifname))
+ 	{
+-		return nl80211_get_scanlist_nl(ifname, buf, len);
++		return nl80211_get_scanlist_nl(ifname, buf, len, ssid);
+ 	}
+ 
+ 	/* AP scan */
+@@ -2761,7 +2778,7 @@ static int nl80211_get_scanlist(const ch
+ 			if (!iwinfo_ifup(ifname))
+ 				return -1;
+ 
+-			rv = nl80211_get_scanlist_nl(ifname, buf, len);
++			rv = nl80211_get_scanlist_nl(ifname, buf, len, ssid);
+ 			iwinfo_ifdown(ifname);
+ 			return rv;
+ 		}
+@@ -2778,7 +2795,7 @@ static int nl80211_get_scanlist(const ch
+ 			 * additional interface and there's no need to tear down the ap */
+ 			if (iwinfo_ifup(res))
+ 			{
+-				rv = nl80211_get_scanlist_nl(res, buf, len);
++				rv = nl80211_get_scanlist_nl(res, buf, len, ssid);
+ 				iwinfo_ifdown(res);
+ 			}
+ 
+@@ -2786,7 +2803,7 @@ static int nl80211_get_scanlist(const ch
+ 			 * during scan */
+ 			else if (iwinfo_ifdown(ifname) && iwinfo_ifup(res))
+ 			{
+-				rv = nl80211_get_scanlist_nl(res, buf, len);
++				rv = nl80211_get_scanlist_nl(res, buf, len, ssid);
+ 				iwinfo_ifdown(res);
+ 				iwinfo_ifup(ifname);
+ 				nl80211_hostapd_hup(ifname);
+--- a/iwinfo_wext.h
++++ b/iwinfo_wext.h
+@@ -377,6 +377,6 @@ static const unsigned int standard_event
+ #define	IW_IE_CYPHER_NUM	8
+ #define	IW_IE_KEY_MGMT_NUM	3
+ 
+-int wext_get_scanlist(const char *ifname, char *buf, int *len);
++int wext_get_scanlist(const char *ifname, char *buf, int *len, const char *ssid);
+ 
+ #endif
+--- a/iwinfo_wext_scan.c
++++ b/iwinfo_wext_scan.c
+@@ -336,7 +336,7 @@ static inline void wext_fill_entry(struc
+ }
+ 
+ 
+-int wext_get_scanlist(const char *ifname, char *buf, int *len)
++int wext_get_scanlist(const char *ifname, char *buf, int *len, const char *ssid)
+ {
+ 	struct iwreq wrq;
+ 	struct iw_scan_req scanopt;        /* Options for 'set' */
+--- a/iwinfo_wl.c
++++ b/iwinfo_wl.c
+@@ -522,9 +522,9 @@ static int wl_get_txpwrlist(const char *
+ 	return 0;
+ }
+ 
+-static int wl_get_scanlist(const char *ifname, char *buf, int *len)
++static int wl_get_scanlist(const char *ifname, char *buf, int *len, const char *ssid)
+ {
+-	return wext_ops.scanlist(ifname, buf, len);
++	return wext_ops.scanlist(ifname, buf, len, ssid);
+ }
+ 
+ static int wl_get_freqlist(const char *ifname, char *buf, int *len)
+@@ -760,4 +760,4 @@ const struct iwinfo_ops wl_ops = {
+ 	.freqlist         = wl_get_freqlist,
+ 	.countrylist      = wl_get_countrylist,
+ 	.close            = wl_close
+-};
++wl_get_scanlist};
diff --git a/package/network/utils/iwinfo/src/iwinfo_mtk.c b/package/network/utils/iwinfo/src/iwinfo_mtk.c
index 96a92beeb1..65ee462a8c 100644
--- a/package/network/utils/iwinfo/src/iwinfo_mtk.c
+++ b/package/network/utils/iwinfo/src/iwinfo_mtk.c
@@ -267,13 +267,16 @@ struct site_survey_info {
 	int htmodelist;
 };
 
-static int mtk_get_scanlist(const char *ifname, char *buf, int *len)
+static int mtk_get_scanlist(const char *ifname, char *buf, int *len, const char *ssid)
 {
 	struct iwinfo_scanlist_entry sce;
 	char action[64] = "SiteSurvey=";
 	char buf2[IWINFO_BUFSIZE];
 	int i, j, length;
 
+	if (ssid && ssid[0])
+		snprintf(action, sizeof(action), "SiteSurvey=%s", ssid);
+
 	if(mtk_get80211priv(ifname, RTPRIV_IOCTL_SET, action, sizeof(action)) < 0)
 		return -1;
 
-- 
2.17.1

