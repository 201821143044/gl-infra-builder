From 3486958b3f3f6083d5168c081c82e862d116a260 Mon Sep 17 00:00:00 2001
From: Jianhui Zhao <jianhui.zhao@gl-inet.com>
Date: Mon, 8 Aug 2022 19:42:30 +0800
Subject: [PATCH] target/mediatek: mtk-eth poll gpy211 link state

Signed-off-by: Jianhui Zhao <jianhui.zhao@gl-inet.com>
---
 .../800-mtk-eth-poll-gpy211-link-state.patch  | 90 +++++++++++++++++++
 1 file changed, 90 insertions(+)
 create mode 100644 target/linux/mediatek/patches-5.4/800-mtk-eth-poll-gpy211-link-state.patch

diff --git a/target/linux/mediatek/patches-5.4/800-mtk-eth-poll-gpy211-link-state.patch b/target/linux/mediatek/patches-5.4/800-mtk-eth-poll-gpy211-link-state.patch
new file mode 100644
index 0000000000..0dd10c67ef
--- /dev/null
+++ b/target/linux/mediatek/patches-5.4/800-mtk-eth-poll-gpy211-link-state.patch
@@ -0,0 +1,90 @@
+Index: linux-5.4.188/drivers/net/ethernet/mediatek/mtk_eth_soc.c
+===================================================================
+--- linux-5.4.188.orig/drivers/net/ethernet/mediatek/mtk_eth_soc.c
++++ linux-5.4.188/drivers/net/ethernet/mediatek/mtk_eth_soc.c
+@@ -11,6 +11,7 @@
+ #include <linux/of_net.h>
+ #include <linux/mfd/syscon.h>
+ #include <linux/regmap.h>
++#include <linux/bitfield.h>
+ #include <linux/clk.h>
+ #include <linux/pm_runtime.h>
+ #include <linux/if_vlan.h>
+@@ -410,7 +411,10 @@ static void mtk_mac_config(struct phylin
+ 		mcr_new |= MAC_MCR_SPEED_1000;
+ 		break;
+ 	case SPEED_100:
+-		mcr_new |= MAC_MCR_SPEED_100;
++		if (state->interface == PHY_INTERFACE_MODE_2500BASEX)
++			mcr_new |= MAC_MCR_SPEED_1000;
++		else
++			mcr_new |= MAC_MCR_SPEED_100;
+ 		break;
+ 	}
+ 	if (state->duplex == DUPLEX_FULL) {
+@@ -3390,6 +3394,40 @@ static const struct net_device_ops mtk_n
+ #endif
+ };
+ 
++static void phylink_fixed_state(struct net_device *dev,
++					  struct phylink_link_state *state)
++{
++#define PHY_MIISTAT		0x18	/* MII state */
++#define PHY_MIISTAT_SPD_MASK	GENMASK(2, 0)
++#define PHY_MIISTAT_DPX		BIT(3)
++#define PHY_MIISTAT_LS		BIT(10)
++#define PHY_MIISTAT_SPD_10	0
++#define PHY_MIISTAT_SPD_100	1
++#define PHY_MIISTAT_SPD_1000	2
++#define PHY_MIISTAT_SPD_2500	4
++
++	struct mtk_mac *mac = netdev_priv(dev);
++	u32 val = _mtk_mdio_read(mac->hw, 0x05, PHY_MIISTAT);
++
++	state->link = (val & PHY_MIISTAT_LS) ? 1 : 0;
++	state->duplex = (val & PHY_MIISTAT_DPX) ? DUPLEX_FULL : DUPLEX_HALF;
++
++	switch (FIELD_GET(PHY_MIISTAT_SPD_MASK, val)) {
++	case PHY_MIISTAT_SPD_10:
++		state->speed = SPEED_10;
++		break;
++	case PHY_MIISTAT_SPD_100:
++		state->speed = SPEED_100;
++		break;
++	case PHY_MIISTAT_SPD_1000:
++		state->speed = SPEED_1000;
++		break;
++	case PHY_MIISTAT_SPD_2500:
++		state->speed = SPEED_2500;
++		break;
++	}
++}
++
+ static int mtk_add_mac(struct mtk_eth *eth, struct device_node *np)
+ {
+ 	const __be32 *_id = of_get_property(np, "reg", NULL);
+@@ -3463,6 +3501,8 @@ static int mtk_add_mac(struct mtk_eth *e
+ 		goto free_netdev;
+ 	}
+ 
++	phylink_fixed_state_cb(phylink, phylink_fixed_state);
++
+ 	mac->phylink = phylink;
+ 
+ 	SET_NETDEV_DEV(eth->netdev[id], eth->dev);
+Index: linux-5.4.188/drivers/net/ethernet/mediatek/mtk_sgmii.c
+===================================================================
+--- linux-5.4.188.orig/drivers/net/ethernet/mediatek/mtk_sgmii.c
++++ linux-5.4.188/drivers/net/ethernet/mediatek/mtk_sgmii.c
+@@ -94,7 +94,10 @@ int mtk_sgmii_setup_mode_force(struct mt
+ 		val |= SGMII_SPEED_10;
+ 		break;
+ 	case SPEED_100:
+-		val |= SGMII_SPEED_100;
++		if (state->interface == PHY_INTERFACE_MODE_2500BASEX)
++			val |= SGMII_SPEED_1000;
++		else
++			val |= SGMII_SPEED_100;
+ 		break;
+ 	case SPEED_2500:
+ 	case SPEED_1000:
-- 
2.25.1

